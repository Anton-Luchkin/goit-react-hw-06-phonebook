{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Notification/Notification.module.css","components/Title/Title.module.css","components/ContactList/Contact/Contact.module.css","components/Filter/Filter.module.css","components/App.module.css","components/Wrapper/wrapper.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducers.js","redux/store.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","ShortId","generate","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Wrapper","children","className","styles","wrapper","Title","CSSTransition","in","appear","timeout","classNames","unmountOnExit","title","Notification","showNotification","notificationBox","notificationText","initialState","ContactForm","handleChange","e","target","value","setState","hendleSubmit","preventDefault","props","contact","hideNotification","notificationTimer","setTimeout","clearTimeout","onSubmitForm","reset","this","onSubmit","contact_form","lable","type","onChange","input","btn","Component","connect","dispatch","phonebookActions","Contact","onDeleteContact","contactText","delContactBtn","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","contactTitle","TransitionGroup","component","contact_list","map","event","App","container","contactsListContainer","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6de05cc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactTitle\":\"ContactList_contactTitle__uDRm4\",\"contact_list\":\"ContactList_contact_list__BlYl-\",\"contact\":\"ContactList_contact__RJXnB\",\"enter\":\"ContactList_enter__3sEAH\",\"enterActive\":\"ContactList_enterActive__qd0R_\",\"exit\":\"ContactList_exit__3TNE0\",\"exitActive\":\"ContactList_exitActive__3d366\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Notification_enter__2xJtc\",\"enterActive\":\"Notification_enterActive__SM6PI\",\"exit\":\"Notification_exit__3eQXI\",\"exitActive\":\"Notification_exitActive__5lVF9\",\"notificationBox\":\"Notification_notificationBox__2Mucc\",\"notificationText\":\"Notification_notificationText__175Hm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Title_appear__10eOh\",\"appearActive\":\"Title_appearActive__2yQ0a\",\"title\":\"Title_title__1nomG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactText\":\"Contact_contactText__S2dFG\",\"delContactBtn\":\"Contact_delContactBtn__3BrBc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1rk1d\",\"input\":\"Filter_input__rz054\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3E8XI\",\"contactsListContainer\":\"App_contactsListContainer__3NBob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper_wrapper__RuM9y\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport ShortId from 'shortid';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n   payload: {\r\n      id: ShortId.generate(),\r\n      name,\r\n      number,\r\n   }\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/chengeFilter');\r\n\r\n\r\nexport default { addContact, deleteContact, changeFilter };","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n   [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n   [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload)\r\n});\r\n\r\nconst filter = createReducer('', {\r\n   [actions.changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n   items,\r\n   filter\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReduser from './phonebook/phonebook-reducers';\r\nimport {\r\n   persistStore,\r\n   persistReducer,\r\n   FLUSH,\r\n   REHYDRATE,\r\n   PAUSE,\r\n   PERSIST,\r\n   PURGE,\r\n   REGISTER\r\n} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n   key: 'contacts',\r\n   storage,\r\n   blacklist: ['filter'],\r\n}\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      contacts: persistReducer(persistConfig, contactsReduser)\r\n   },\r\n   middleware: getDefaultMiddleware({\r\n      serializableCheck: {\r\n         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n      }\r\n   })\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import React from 'react';\n\nimport styles from './wrapper.module.css';\n\nconst Wrapper = ({ children }) => (\n  <div className={styles.wrapper}>{children}</div>\n);\n\nexport default Wrapper;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Title.module.css';\n\nconst Title = () => (\n  <div>\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames={styles}\n      unmountOnExit\n    >\n      <h2 className={styles.title}>Phonebook</h2>\n    </CSSTransition>\n  </div>\n);\n\nexport default Title;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ showNotification }) => (\n  <CSSTransition\n    in={showNotification}\n    timeout={250}\n    classNames={styles}\n    unmountOnExit\n  >\n    <div className={styles.notificationBox}>\n      <span className={styles.notificationText}>Contact already exist!</span>\n    </div>\n  </CSSTransition>\n);\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport Notification from '../Notification/Notification';\n\nimport styles from './ContactForm.module.css';\n\nconst initialState = {\n   name: '',\n   number: '',\n};\n\nexport class ContactForm extends Component {\n   state = {\n      name: '',\n      number: '',\n   };\n\n   handleChange = e => {\n      const { name, value } = e.target;\n      this.setState({ [name]: value });\n   };\n\n   hendleSubmit = e => {\n      e.preventDefault();\n      const { name } = this.state;\n      const contacts = this.props.contacts;\n\n      for (const contact of contacts) {\n         const hideNotification = () => {\n            this.setState({ showNotification: false });\n         };\n\n         const notificationTimer = () => {\n            setTimeout(hideNotification, 3000);\n         };\n\n         if (name === contact.name) {\n            this.setState({ showNotification: true });\n            notificationTimer();\n            clearTimeout(notificationTimer);\n            return;\n         }\n      }\n\n      this.props.onSubmitForm(this.state);\n      this.reset();\n   };\n\n   reset = () => {\n      this.setState(initialState);\n   };\n\n   render() {\n      const { name, number, showNotification } = this.state;\n\n      return (\n         <form onSubmit={this.hendleSubmit} className={styles.contact_form}>\n            <Notification showNotification={showNotification} />\n\n            <label className={styles.lable}>\n               Name\n          <input\n                  type=\"text\"\n                  value={name}\n                  onChange={this.handleChange}\n                  name=\"name\"\n                  className={styles.input}\n               />\n            </label>\n            <label className={styles.lable}>\n               Number\n          <input\n                  type=\"phone\"\n                  value={number}\n                  onChange={this.handleChange}\n                  name=\"number\"\n                  className={styles.input}\n               />\n            </label>\n            <button type=\"submit\" className={styles.btn}>\n               Add contact\n        </button>\n         </form>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   contacts: state.contacts.items,\n})\n\nconst mapDispatchToProps = dispatch => ({\n   onSubmitForm: (contact) => dispatch(phonebookActions.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, onDeleteContact }) => {\n\n   return (\n      <>\n         <p className={styles.contactText}>\n            {name}: <span>{number}</span>\n         </p>\n         <button\n            className={styles.delContactBtn}\n            type=\"button\"\n            onClick={onDeleteContact}\n         >\n            Delete\n         </button>\n      </>)\n};\n\nContact.propTypes = {\n   contactItem: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n   }),\n   onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\n\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\n\nimport Contact from './Contact/Contact';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n   return (\n      <div>\n         <h2 className={styles.contactTitle}>Contacts</h2>\n         <TransitionGroup component=\"ul\" className={styles.contact_list}>\n            {contacts.map(({ id, ...props }) => {\n               return (\n                  <CSSTransition\n                     key={id} classNames={styles} timeout={250}>\n                     <li className={styles.contact}>\n                        <Contact\n                           onDeleteContact={() => onDeleteContact(id)}\n                           {...props} />\n                     </li>\n                  </CSSTransition>\n               )\n            })}\n         </TransitionGroup>\n      </div>\n   );\n};\n\nContactList.propTypes = {\n   contact: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.string.isRequired,\n         name: PropTypes.string.isRequired,\n         number: PropTypes.string.isRequired,\n      }),\n   ),\n   onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n   const normalizedFilter = filter.toLowerCase();\n   return allContacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter),\n   );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n   contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n   onDeleteContact: (id) => dispatch(phonebookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n   return (\n      <label className={styles.filter}>\n         Find contact by name\n         <input\n            type=\"text\"\n            value={value}\n            onChange={onChange}\n            className={styles.input}\n         />\n      </label>\n   );\n};\n\nFilter.propTypes = {\n   value: PropTypes.string.isRequired,\n   onChange: PropTypes.func.isRequired,\n};\n\n\nconst mapStateToProps = (state) => ({\n   value: state.contacts.filter,\n})\n\nconst mapDispatchToProps = dispatch => ({\n   onChange: (event) => dispatch(phonebookActions.changeFilter(event.target.value)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport Wrapper from './Wrapper/Wrapper';\nimport Title from './Title/Title';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nimport styles from './App.module.css';\n\nexport default function App() {\n   return (\n      <Wrapper>\n         <div>\n            <Title />\n            <div className={styles.container}>\n               <ContactForm />\n               <div className={styles.contactsListContainer}>\n                  <Filter />\n                  <ContactList />\n               </div>\n            </div>\n         </div>\n      </Wrapper>\n   )\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './baseStyles.css';\n\nReactDOM.render(\n   <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n         <App />\n      </PersistGate>\n   </Provider>\n\n   , document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__oLpHn\",\"lable\":\"ContactForm_lable__aQEWB\",\"input\":\"ContactForm_input__3vNk8\",\"btn\":\"ContactForm_btn__6tVbz\"};"],"sourceRoot":""}